/* inftrees.c -- generate Huffman trees for efficient decoding
 * Copyright (C) 1995-2024 Mark Adler
 * For conditions of distribution and use, see copyright notice in zlib.h
 */

#include "zutil.h"
#include "inftrees.h"

#define MAXBITS 15

const char inflate_copyright[] =
   " inflate 1.3.1.1 Copyright 1995-2024 Mark Adler ";

/*
   Build a set of tables to decode the provided canonical Huffman code.
   The code lengths are lens[0..codes-1].  The result starts at *table,
   whose indices are 0..2^bits-1.  work is a writable array of at least
   lens shorts, which is used as a work area.  type is the type of code
   to be generated, CODES, LENS, or DISTS.  On return, zero is success,
   -1 is an invalid code, and +1 means that ENOUGH is insufficient.
 */
local int inflate_table(codetype type, unsigned short FAR *lens,
                        unsigned codes, code FAR * FAR *table,
                        unsigned FAR *bits, unsigned short FAR *work) {
    /* ... (original function body remains unchanged) ... */
}